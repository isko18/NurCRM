# Generated by Django 5.2.1 on 2025-08-15 19:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0005_user_can_view_brand_category_user_can_view_clients_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BarberProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=128, verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='Телефон')),
                ('extra_phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='Доп. телефон')),
                ('work_schedule', models.CharField(blank=True, max_length=128, null=True, verbose_name='График (напр. Пн–Пт 10–18)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barbers', to='users.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=128, verbose_name='ФИО')),
                ('phone', models.CharField(db_index=True, max_length=32, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('inactive', 'Неактивен'), ('vip', 'VIP'), ('blacklist', 'В черном списке')], default='active', max_length=16, verbose_name='Статус')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barber_clients', to='users.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='users.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(verbose_name='Начало')),
                ('end_at', models.DateTimeField(verbose_name='Конец')),
                ('status', models.CharField(choices=[('booked', 'Забронировано'), ('confirmed', 'Подтверждено'), ('completed', 'Завершено'), ('canceled', 'Отменено'), ('no_show', 'Не пришёл')], db_index=True, default='booked', max_length=16)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='users.company', verbose_name='Компания')),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='barber.barberprofile', verbose_name='Мастер')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='barber.client', verbose_name='Клиент')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='barber.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.AddIndex(
            model_name='barberprofile',
            index=models.Index(fields=['company', 'is_active'], name='barber_barb_company_9d69f0_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['company', 'status'], name='barber_clie_company_7809ca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='client',
            unique_together={('company', 'phone')},
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['company', 'is_active'], name='barber_serv_company_202155_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('company', 'name')},
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['company', 'start_at'], name='barber_appo_company_655e07_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='barber_appo_status_a074c2_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['barber', 'start_at'], name='barber_appo_barber__cc03a7_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointment',
            constraint=models.CheckConstraint(condition=models.Q(('end_at__gt', models.F('start_at'))), name='appointment_end_after_start'),
        ),
    ]
