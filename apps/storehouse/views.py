from rest_framework import generics, permissions
from .models import (
    Warehouse, Supplier, Product, Stock,
    StockIn, StockOut, StockTransfer
)
from .serializers import (
    WarehouseSerializer, SupplierSerializer, ProductSerializer, StockSerializer,
    StockInSerializer, StockOutSerializer, StockTransferSerializer
)


# üì¶ –°–∫–ª–∞–¥—ã
class WarehouseListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = WarehouseSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Warehouse.objects.filter(company=self.request.user.company)


class WarehouseDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = WarehouseSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Warehouse.objects.filter(company=self.request.user.company)


# üöö –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏
class SupplierListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = SupplierSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Supplier.objects.filter(company=self.request.user.company)


class SupplierDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = SupplierSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Supplier.objects.filter(company=self.request.user.company)


# üõí –¢–æ–≤–∞—Ä—ã
class ProductListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = ProductSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Product.objects.filter(company=self.request.user.company)


class ProductDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = ProductSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Product.objects.filter(company=self.request.user.company)


# üìä –û—Å—Ç–∞—Ç–∫–∏
class StockListAPIView(generics.ListAPIView):
    serializer_class = StockSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        # –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return Stock.objects.filter(warehouse__company=self.request.user.company)


class StockDetailAPIView(generics.RetrieveAPIView):
    serializer_class = StockSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Stock.objects.filter(warehouse__company=self.request.user.company)


# üì• –ü—Ä–∏—Ö–æ–¥
class StockInListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = StockInSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockIn.objects.filter(company=self.request.user.company)


class StockInDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = StockInSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockIn.objects.filter(company=self.request.user.company)


# üì§ –†–∞—Å—Ö–æ–¥
class StockOutListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = StockOutSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockOut.objects.filter(company=self.request.user.company)


class StockOutDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = StockOutSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockOut.objects.filter(company=self.request.user.company)


# üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
class StockTransferListCreateAPIView(generics.ListCreateAPIView):
    serializer_class = StockTransferSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockTransfer.objects.filter(company=self.request.user.company)


class StockTransferDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = StockTransferSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return StockTransfer.objects.filter(company=self.request.user.company)
