# Generated by Django 5.2.1 on 2025-08-20 17:20

import apps.users.managers
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Функция',
                'verbose_name_plural': 'Функции',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название вида деятельности')),
            ],
            options={
                'verbose_name': 'Вид деятельности',
                'verbose_name_plural': 'Виды деятельности',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название отрасли')),
            ],
            options={
                'verbose_name': 'Отрасль',
                'verbose_name_plural': 'Отрасли',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('avatar', models.URLField(blank=True, null=True, verbose_name='Аватар (URL)')),
                ('role', models.CharField(blank=True, choices=[('admin', 'Администратор'), ('manager', 'Менеджер'), ('user', 'Сотрудник'), ('owner', 'Владелец')], max_length=32, null=True, verbose_name='Роль сотрудника')),
                ('can_view_dashboard', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к обзору')),
                ('can_view_cashbox', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к кассе')),
                ('can_view_departments', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к отделам')),
                ('can_view_orders', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к заказам')),
                ('can_view_analytics', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к аналитике')),
                ('can_view_products', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к товарам')),
                ('can_view_booking', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к бронированию')),
                ('can_view_department_analytics', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к аналитике отделов')),
                ('can_view_employees', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к сотрудникам')),
                ('can_view_clients', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к клиентам')),
                ('can_view_brand_category', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к брендам и категориям')),
                ('can_view_settings', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к настройкам')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', apps.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owned_company', to=settings.AUTH_USER_MODEL, verbose_name='Владелец компании')),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.industry', verbose_name='Вид деятельности')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.sector', verbose_name='Отрасль')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='users.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='industry',
            name='sectors',
            field=models.ManyToManyField(blank=True, related_name='industries', to='users.sector', verbose_name='Отрасли'),
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('features', models.ManyToManyField(blank=True, null=True, to='users.feature')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='subscription_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.subscriptionplan'),
        ),
    ]
